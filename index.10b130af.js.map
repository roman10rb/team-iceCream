{"mappings":"AAAAA,OAAOC,OAAS,KACZD,OAAOE,SAAW,SAASC,GACvB,IAAIC,EAAOJ,OAAOK,QACdD,EAAO,MACPE,cACAC,qBACAH,EAAO,K,EAGnB,MAAMI,EAAYC,SAASC,cAAc,cAErCV,OAAOE,SAAW,KACZF,OAAOK,QAAU,IACnBG,EAAUG,UAAUC,OAAO,kBAClBZ,OAAOK,QAAU,KAC1BG,EAAUG,UAAUE,IAAI,iBAAiB,EAI7CL,EAAUM,QAAU,KACjBd,OAAOe,SAAS,EAAG,EAAE,CAC3B,ECrBDf,OAAOgB,iBAAiB,QAExB,WACI,SAASC,EAAmBC,GACxB,IAAIC,EAAiBD,GAA0CT,SAASW,iBAAiB,yBACrFD,GACAA,EAAeE,SAAQC,KAK/B,SAA+BA,GAC3B,IAAIC,EAAiB,KACrB,MAAMC,EAAWC,SAASH,EAAcI,QAAQJ,eAAiBG,SAASH,EAAcI,QAAQJ,eAAiB,IAC3GK,EAAaF,SAASH,EAAcM,WACpCC,EAAgB,EAChBC,EAAQC,IACLR,IAAgBA,EAAiBQ,GACtC,MAAMC,EAAWC,KAAKC,KAAKH,EAAYR,GAAkBC,EAAU,GACnEF,EAAcM,UAAYK,KAAKE,MAAMH,GAAYH,EAAgBF,IAC7DK,EAAW,GACXhC,OAAOoC,sBAAsBN,EAAK,EAG1C9B,OAAOoC,sBAAsBN,E,CAjBrBO,CAAsBf,EAAc,G,CAsBhD,IAGIgB,EAAW,IAAIC,sBAAqB,CAACC,EAASC,KAC9CD,EAAQnB,SAAQqB,IACZ,GAAIA,EAAMC,eAAgB,CACtB,MAAMC,EAAgBF,EAAMG,OACtBC,EAAsBF,EAAcxB,iBAAiB,yBACvD0B,EAAoBC,QACpB9B,EAAmB6B,GAEvBL,EAASO,UAAUJ,E,IAEzB,GAbQ,CACVK,UAAW,KAeXC,EAAWzC,SAASW,iBAAiB,mBACrC8B,EAASH,QACTG,EAAS7B,SAAQ8B,IACbb,EAASc,QAAQD,EAAQ,G,IChDrC,IAAIE,OAAO,gBAAgB,CAEzBC,cAAe,EAGfC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAGxBC,MAAM,IAGNC,MAAM,EAGNC,OAAQ,OACRC,WAAY,CACVC,QAAQ,KClBZ,IAAIT,OAAO,oBAAoB,CAE3BU,WAAY,CACdC,GAAI,qBAEFC,WAAW,GAIXC,gBAAgB,EAChBC,qBAAqB,EAGnBR,MAAM,EACNL,cAAe,EAEfM,OAAQ,QAERQ,WAAW,CACTC,cAAc,EACdC,eAAe,GAOjBC,SAAU,CAERC,SAAS,EACTC,gBAAgB,EAChBC,YAAY","sources":["src/js/scroll-up.js","src/js/counter.js","src/js/gallery-script.js","src/js/customer-reviews.js"],"sourcesContent":["window.onload = () => {\n    window.onscroll = function(e) {\n        let winY = window.scrollY;\n        if (winY > 300) {\n            progressBar();\n            scrollbarAnimation();\n            winY = null;\n        }\n    };\nconst scrollBtn = document.querySelector('.isShowBtn');\n\n    window.onscroll = () => {\n      if (window.scrollY > 700) {\n        scrollBtn.classList.remove('isShowBtn_hide');      \n      } else if (window.scrollY < 700) {\n        scrollBtn.classList.add('isShowBtn_hide');\n      }\n    };\n\n    scrollBtn.onclick = () => {\n       window.scrollTo(0, 0);\n}\n};","window.addEventListener(\"load\", windowLoad);\n\nfunction windowLoad() {\n    function digitsCountersInit(digitsCountersItem) {\n        let digitsCounters = digitsCountersItem ? digitsCountersItem : document.querySelectorAll(\"[data-digits-counter]\");\n        if (digitsCounters) {\n            digitsCounters.forEach(digitsCounter => {\n                digitsCountersAnimate(digitsCounter);\n            });\n        }\n    }\n    function digitsCountersAnimate(digitsCounter) {\n        let startTimestamp = null;\n        const duration = parseInt(digitsCounter.dataset.digitsCounter) ? parseInt(digitsCounter.dataset.digitsCounter) : 1000;\n        const startValue = parseInt(digitsCounter.innerHTML);\n        const startPosition = 0;\n        const step = (timestamp) => {\n            if (!startTimestamp) startTimestamp = timestamp;\n            const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n            digitsCounter.innerHTML = Math.floor(progress * (startPosition + startValue));\n            if (progress < 1) { \n                window.requestAnimationFrame(step);\n            } \n        };\n        window.requestAnimationFrame(step);\n    }\n  \n\n    \n    let options = {\n        threshold: 0.3\n    }\n    let observer = new IntersectionObserver((entries, observer) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                const targetElement = entry.target;\n                const digitsCountersItems = targetElement.querySelectorAll(\"[data-digits-counter]\");\n                if (digitsCountersItems.length) {\n                    digitsCountersInit(digitsCountersItems);\n                }\n                observer.unobserve(targetElement);\n            }\n        });\n    }, options);\n\n    let sections = document.querySelectorAll('.hero, .section');\n    if (sections.length) {\n        sections.forEach(section => {\n            observer.observe(section);\n        });\n    }\n}\n","new Swiper('.image-slider',{\n\n  slidesPerView: 1,\n\n// Autoplay\n  autoplay: {\n    delay: 4000,\n    disableOnInteraction: false\n  },\n\n  speed:2000,\n\n // Infinite\n  loop: true,\n\n// Effect\n  effect: 'cube',\n  cubeEffect: {\n    shadow: false,\n  },\n  \n});","new Swiper('.container-slider',{\n    // Progressbar\n    pagination: {\n  el: '.swiper-pagination',\n  //  Bullets\n    clickable: true,\n    \n    },\n\n    centeredSlides: true,\n    slideToClickedSlide: true,\n  \n    // Infinite\n      loop: true,\n      slidesPerView: 1,\n    // Effect flip or slide or fade\n      effect: 'slide',\n\n      flipEffect:{\n        slideShadows: true,\n        limitRotation: true,\n      },\n      \n      // fadeEffect: {\n      //   crossFade: true,\n      // },\n\n      keyboard: {\n        // Enable\n        enabled: true,\n        onlyInViewport: true,\n        pageUpDown: true,\n      },\n    \n}\n\n);\n"],"names":["window","onload","onscroll","e","winY","scrollY","progressBar","scrollbarAnimation","scrollBtn","document","querySelector","classList","remove","add","onclick","scrollTo","addEventListener","digitsCountersInit","digitsCountersItem","digitsCounters","querySelectorAll","forEach","digitsCounter","startTimestamp","duration","parseInt","dataset","startValue","innerHTML","startPosition","step","timestamp","progress","Math","min","floor","requestAnimationFrame","digitsCountersAnimate","observer1","IntersectionObserver","entries","observer","entry","isIntersecting","targetElement","target","digitsCountersItems","length","unobserve","threshold","sections","section","observe","Swiper","slidesPerView","autoplay","delay","disableOnInteraction","speed","loop","effect","cubeEffect","shadow","pagination","el","clickable","centeredSlides","slideToClickedSlide","flipEffect","slideShadows","limitRotation","keyboard","enabled","onlyInViewport","pageUpDown"],"version":3,"file":"index.10b130af.js.map"}